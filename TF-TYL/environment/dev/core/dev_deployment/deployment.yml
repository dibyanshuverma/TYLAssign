parameters:
  container_name:
  container_key:
  environment_name:
  tfvarsFile:
  root_directory:
  service_connection_name:
  backend_resource_group:
  backend_storage_account_name:

steps:
- download: none
- task: DownloadBuildArtifacts@0
  displayName: 'Downloading ${{parameters.environment_name}} Artifacts'
  inputs:
    buildType: 'current'
    downloadType: 'single'
    artifact_name: ${{parameters.environment_name}}
    downloadPath: '${{System.ArtifactsDirectory}}'

- task: TerraformInstaller@0
  inputs:
    terraformVersion: '0.13.5'

- task: TerraformTaskV1@0
  displayName: terraform init
  input:
    provider: azurerm
    command: init
    workingDirectory: ${{System.ArtifactsDirectory}}/${{parameters.environment_name}}${{parameter.root_directory}}
    backendServiceArm: ${{parameter.service_connection_name}}
    backendAzureRmResourceGroupName: ${{parameter.backend_resource_group}}
    backendAzureRmStorageAccountsName: ${{parameter.backend_storage_account}}
    backendAzureRmContainerName: ${{parameter.container_name}}
    backendAzureRmKey: ${{parameter.container_key}}
- task: TerraformTaskV1@0
  ${{if eq(parameters.destroy,false)}}:
    displayName: Terraform Apply
  ${{if eq(parameters.destroy,true)}}:
    displayName: Terraform destroy
  inputs:
    provider: 'azurerm'
    workingDirectory: "$(System.ArtifactDirectory)/${{parameters.environment_name}}${{parameters.root_directory}}"
    ${{if eq(parameters.destroy, false)}}:
      command: 'apply'
      commandOptions: "$(System.ArtifactDirectory)/${{parameters.environment_name}}${{parameters.root_directory}}/plan.tfplan"
    ${{if eq(parameters.destroy, true)}}:
      command: 'destroy'
      commandOptions: "--var-file=$(System.ArtifactDirectory)/${{parameters.environment_name}}${{parameters.tfvarsFile}}"
    environmentServiceNameArm: ${{parameter.service_connection_name}}

